Kadet,

De sensoren van ons systeem vangen signalen op van een (mogelijk vijandig) ruimteprojectiel. Het is op dit moment
nog onduidelijk of dit projectiel met deze baan met ons zal kruisen. Om dit te kunnen berekenen hebben we allereerst
de mogelijke locaties nodig waar dit projectiel zich nu bevindt. De waarneming van onze optische sensor (jullie
puzzle-input) kan het antwoord op deze vraag geven. In het inputbestand treffen jullie een array van lichtintensiteitswaardes
aan. Onze engineers hebben een systeem ontworpen waardoor deze lichtintensiteitswaardes geinterpreteerd kunnen worden.
Hieronder wordt deze methode uitgelegd zodat jullie het kunnen reproduceren op de puzzle-input. De methode wordt eerst
uitgelegd met voorbeelddata.

*** Uitleg met voorbeelddata ***
Bekijk de voorbeelddata hieronder:
024234
404823
204924
103893
293001
102939

De voorbeelddata is een array van 6x6 met getallen tussen de 0 en de 9.

Om uit deze voorbeelddata de potentiele locaties van het ruimteprojectiel te krijgen moeten twee afzonderlijke (sequentiele)
stappen doorlopen worden.

** Uitleg stap 1 **
De engineers van dit systeem houden erg van wiskunde, dus dus zij hebben het zo ontworpen dat
voor de eerste stap gebruik wordt gemaakt van vermenigvuldigingen. Dit doen zij door een array van 3x3 te schuiven over
de grotere array van 6x6. Ze beginnen linksboven (positie 0,0), vermenigvuldigen de matrices (element-wise), en schuiven de 3x3-array
daarna een stapje naar rechts. Wanneer het einde van de rij is bereikt schuiven ze de array terug naar het begin van de rij,
en gaan dan een rij naar beneden en herhalen daar dit proces. Het resultaat is een nieuwe array met daarin de waarden van
deze vermenigvuldigingen.

De geheime gewichtenmatrix waarmee de onderzoekers over de puzzle-input schuiven ziet er zo uit:
001
010
100

We lichten het voorbeeld even toe. De onderzoekers beginnen linksboven in de puzzle-input. Wanneer zij de geheime gewichtenmatrix
op de positie linksboven leggen vermenigvuldigen ze deze met de corresponderende subsectie van de puzzle-input. Bij de eerste
stap is de subsectie van de puzzle-input:
024
404
204

Wanneer we deze array vermenigvuldigen met de geheime gewichtenmatrix krijgen we de volgende output:
004
000
200

Daarna nemen we hier de som van: 6. 6 schrijven we op.
Daarna schuiven we de geheime gewichten matrix een plek op naar rechts. We krijgen dan deze subsectie van de puzzle-input:
242
048
049

Wanneer we deze subsectie vermenigvuldigen met de geheime gewichtenmatrix en de getallen optellen krijgen we: 6. Dit getal
schrijven we ook op. Onze output is nu [6, 6]. We gaan even vooruit in de tijd, het resultaat van de bovenste rij is [6, 6, 15, 15]

Nu schuiven we de geheime gewichtenmatrix terug naar het begin van de rij, en daarna een rij naar beneden. Onze subsectie is nu:
404
204
103

Wanneer we de vermenigvuldiging en optelling toepassen krijgen we het getal 5. Daarna schuiven we de gewichtenmatrix weer
op naar rechts. We herhalen dit proces voor deze rij en voor de resterende rijen. Het resultaat van alle vermenigvuldigingen
is de onderstaande array:
[[6, 6, 15, 15]
 [5, 12, 14, 13]
 [6, 21, 13, 13]
 [13, 11, 11, 12]]

Goed gedaan! Je hebt het eerste gedeelte van deze opdracht voltooid. Als tweede stap hoeven we alleen nog maar een ander
(eenvoudiger) bewerkingstype toe te passen. Dit leggen we hieronder uit.

** Uitleg stap 2 **
De input van stap twee is de 4x4-array die je bij stap 1 hebt gekregen (op de volledige puzzle input is het niet 4x4).
Voor de tweede stap bekijken de onderzoekers steeds een 2x2 uitsnede van de 4x4-array en nemen daar de maximale waarde van.
In plaats van de array dan 1 plaatsje naar rechts op te schuiven, schuiven ze die twee plekken op naar rechts. Hetzelfde
geldt voor het naar beneden opschuiven wanneer je bij het einde van de rij bent gekomen.

We doorlopen de stappen weer even samen. We beginnen linksboven. De 2x2 array die dan uitgesneden wordt is:
[[6, 6],
 [5, 12]]

De maximale waarde van deze getallen is 12. Die schrijven we op. Daarna schuiven we de uitsnede twee plekken op naar
rechts, de uitsnede is dan:
[[15, 15],
 [14, 13]]

De maximale waarde van deze getallen is: 15. We zijn nu bij het einde van de rij aangekomen, en we schuiven de uitsnede
nu terug naar het begin van de rij en gaan dan twee rijen naar beneden. De uitsnede is nu:
[[6, 21],
 [13, 11]]

De maximale waarde hiervan is 21. Nu schuiven we de uitsnede weer twee plekken op naar rechts en krijgen de uitsnede:
[[13, 13],
 [11, 12]]
De maximale waarde is 13.

De uitkomst-array van stap twee is:
[[12, 15],
 [21, 13]]

** Uitleg berekenen van het antwoord **
Wanneer je deze output-array hebt kun je het antwoord berekenen. Het antwoord bestaat uit twee delen:
1) bekijk wat de maximale waarde is in de array (hier is dat 21)
2) bekijk hoe vaak deze waarde in de array voorkomt (hier is dat 1 keer).

Je antwoord is het product van 1) en 2), dus: 21 * 1 = 21.

Gegroet,

Commander D
Missile Protection Command





